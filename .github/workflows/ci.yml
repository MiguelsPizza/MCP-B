name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup PNPM
  #       uses: pnpm/action-setup@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #         cache: 'pnpm'

  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile

  #     - name: Run linter
  #       run: pnpm lint

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies (ignore scripts)
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build packages first
        run: pnpm build:packages

      - name: Run postinstall scripts
        run: pnpm rebuild

      - name: Build all projects (to generate required files)
        run: pnpm build

      - name: Run type check
        run: pnpm typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies (ignore scripts)
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build packages first
        run: pnpm build:packages

      - name: Run postinstall scripts
        run: pnpm rebuild

      - name: Build everything
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == 22
        with:
          name: build-artifacts
          path: |
            packages/*/dist
            web/dist
            extension/.output

  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [20, 22]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup PNPM
  #       uses: pnpm/action-setup@v4

  #     - name: Setup Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'pnpm'

  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile

  #     - name: Run tests
  #       run: pnpm test --if-present

  check-format:
    name: Check Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies (ignore scripts)
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build packages first
        run: pnpm build:packages

      - name: Run postinstall scripts
        run: pnpm rebuild

      - name: Check formatting
        run: pnpm format:check